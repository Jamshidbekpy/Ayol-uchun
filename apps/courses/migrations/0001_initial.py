# Generated by Django 5.2.3 on 2025-07-21 03:05

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "full_name",
                    models.CharField(max_length=255, verbose_name="Full name"),
                ),
                (
                    "avatar",
                    models.ImageField(upload_to="authors/", verbose_name="Avatar"),
                ),
            ],
            options={
                "verbose_name": "Author",
                "verbose_name_plural": "Authors",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(max_length=255, verbose_name="Category name"),
                ),
                (
                    "icon",
                    models.ImageField(upload_to="category_icons/", verbose_name="Icon"),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                ("description", models.TextField(verbose_name="Description")),
                ("price", models.PositiveIntegerField(verbose_name="Price")),
                (
                    "card",
                    models.ImageField(
                        upload_to="course_cards/", verbose_name="Course image"
                    ),
                ),
                (
                    "discount",
                    models.PositiveIntegerField(default=0, verbose_name="Discount (%)"),
                ),
                (
                    "discount_time",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Discount expires at",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.author",
                        verbose_name="Author",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.category",
                        verbose_name="Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Course",
                "verbose_name_plural": "Courses",
            },
        ),
        migrations.CreateModel(
            name="CommentCourse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("comment", models.TextField(verbose_name="Comment")),
                ("grade", models.PositiveSmallIntegerField(verbose_name="Grade")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="courses.course",
                        verbose_name="Course",
                    ),
                ),
            ],
            options={
                "verbose_name": "Course comment",
                "verbose_name_plural": "Course comments",
            },
        ),
        migrations.CreateModel(
            name="Promokod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "promokod",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Promo code"
                    ),
                ),
                (
                    "discount",
                    models.PositiveIntegerField(default=0, verbose_name="Discount (%)"),
                ),
                ("expire_at", models.DateTimeField(verbose_name="Expires at")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("USED", "Used"),
                            ("EXPIRED", "Expired"),
                            ("ACTIVE", "Active"),
                        ],
                        default="ACTIVE",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.course",
                        verbose_name="Course",
                    ),
                ),
            ],
            options={
                "verbose_name": "Promo code",
                "verbose_name_plural": "Promo codes",
            },
        ),
        migrations.CreateModel(
            name="UserCourse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "is_sold",
                    models.BooleanField(default=False, verbose_name="Purchased"),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.course",
                        verbose_name="Course",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "User's course",
                "verbose_name_plural": "Users' courses",
            },
        ),
        migrations.AddField(
            model_name="course",
            name="users",
            field=models.ManyToManyField(
                through="courses.UserCourse",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Users",
            ),
        ),
        migrations.CreateModel(
            name="Video",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "video",
                    models.FileField(
                        upload_to="course_videos/", verbose_name="Video file"
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.course",
                        verbose_name="Course",
                    ),
                ),
            ],
            options={
                "verbose_name": "Course video",
                "verbose_name_plural": "Course videos",
            },
        ),
    ]
